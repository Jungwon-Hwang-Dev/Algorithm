# Repair_shop
import sys
sys.stdin = open("repair_shop_input.txt", "r")

T = int(input())
for case in range(1, T+1):
    N, M, K, A, B = map(int, input().split(' '))
    # of Reception(N) / Repair(M) / Customer(K) // Desk # Rec(A) / Rep(B)
    an = list(map(int, input().split(' ')))
    bm = list(map(int, input().split(' ')))
    tn = list(map(int, input().split(' ')))

    t = 0
    c = 1
    Reception_waiting = []
    Receptions = [[0, 0] for _ in range(N)] # [id, time_enter]
    Repair_waiting = []
    Repairs = [[0,0] for _ in range(M)] # [id, time_enter]
    cnt_done = 0

    Reception_A_history = []
    Repair_B_history = []

    while(cnt_done < K):
        # Repair list reset
        for m in range(M):
            if (Repairs[m][0] != 0) and (Repairs[m][1] == t - bm[m]):
                Repairs[m] = [0, 0] # reset
                cnt_done += 1

        # Reception list reset
        for n in range(N):
            if (Receptions[n][0] != 0) and (Receptions[n][1] == t - an[n]):
                Repair_waiting.append(Receptions[n][0])
                Receptions[n] = [0, 0]

        # Customers reset
        for i in range(len(tn)):
            if tn[0] == t:
                Reception_waiting.append(c)
                del tn[0]
                c += 1
            else: break

        # Reception waiting reset
        for n in range(N):
            if (Receptions[n] == [0, 0]) and Reception_waiting:
                Receptions[n] = [Reception_waiting.pop(0), t]
                if (n + 1) == A:
                    Reception_A_history.append(Receptions[n][0])

        # Repair waiting reset
        for m in range(M):
            if (Repairs[m] == [0, 0]) and Repair_waiting:
                Repairs[m] = [Repair_waiting.pop(0), t]
                if (m + 1) == B:
                    Repair_B_history.append(Repairs[m][0])
        t += 1

    answer = sum(set(Reception_A_history) & set(Repair_B_history))
    if not answer:
        answer = -1

    print('#{} {}'.format(case, answer))
